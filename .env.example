# =============================================================================
# Global Environment Variables - .env.example
# =============================================================================
# This file contains shared environment variables used across all services.
# 
# SECURITY GUIDELINES:
# -------------------
# 1. NEVER commit the actual .env file to version control
# 2. Copy this file to .env and fill in actual values:
#    cp .env.example .env
# 3. Add .env to .gitignore (if not already present)
# 4. Use strong passwords and randomly generated secrets
# 5. Rotate credentials regularly
# 6. Use different credentials for development/staging/production
# 7. Store production secrets in a secure vault (e.g., AWS Secrets Manager, HashiCorp Vault)
#
# USAGE:
# ------
# Each service can reference these variables in their own .env files.
# Services: frontend, backend, worker
# =============================================================================

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# PostgreSQL database connection settings
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=myapp_db
POSTGRES_USER=myapp_user
POSTGRES_PASSWORD=change_this_secure_password

# Database connection pool settings
POSTGRES_MAX_CONNECTIONS=20
POSTGRES_MIN_CONNECTIONS=5

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
# Redis connection URL for caching and session management
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=change_this_redis_password

# Redis database indexes for different purposes
REDIS_CACHE_DB=0
REDIS_SESSION_DB=1
REDIS_QUEUE_DB=2

# -----------------------------------------------------------------------------
# Storage Configuration
# -----------------------------------------------------------------------------
# Root directory for file storage
STORAGE_ROOT=/var/app/storage

# Storage service type: local, s3, gcs
STORAGE_TYPE=local

# S3/Object Storage Configuration (if STORAGE_TYPE=s3)
S3_BUCKET=my-app-bucket
S3_REGION=us-east-1
S3_ACCESS_KEY_ID=your_access_key
S3_SECRET_ACCESS_KEY=your_secret_key
S3_ENDPOINT=https://s3.amazonaws.com

# -----------------------------------------------------------------------------
# Application Configuration
# -----------------------------------------------------------------------------
# Environment: development, staging, production
NODE_ENV=development
APP_ENV=development

# Application URL and ports
APP_URL=http://localhost:3000
API_URL=http://localhost:8000

# -----------------------------------------------------------------------------
# Security & Authentication
# -----------------------------------------------------------------------------
# JWT secret for token generation (use a strong random string)
JWT_SECRET=change_this_to_a_very_long_random_secret_key_minimum_32_characters
JWT_EXPIRATION=7d
JWT_REFRESH_SECRET=change_this_to_another_very_long_random_secret_key
JWT_REFRESH_EXPIRATION=30d

# Session secret
SESSION_SECRET=change_this_session_secret_minimum_32_characters

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# -----------------------------------------------------------------------------
# Email Configuration
# -----------------------------------------------------------------------------
# SMTP settings for sending emails
SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=2525
SMTP_USER=your_smtp_user
SMTP_PASSWORD=your_smtp_password
SMTP_FROM_EMAIL=noreply@myapp.com
SMTP_FROM_NAME=MyApp

# -----------------------------------------------------------------------------
# Queue & Worker Configuration
# -----------------------------------------------------------------------------
# Queue provider: redis, rabbitmq, sqs
QUEUE_PROVIDER=redis
QUEUE_DEFAULT=default

# Worker settings
WORKER_CONCURRENCY=5
WORKER_MAX_RETRIES=3

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Log level: debug, info, warn, error
LOG_LEVEL=info
LOG_FORMAT=json

# Log file paths
LOG_FILE_PATH=/var/log/myapp/app.log
LOG_ERROR_FILE_PATH=/var/log/myapp/error.log

# -----------------------------------------------------------------------------
# Monitoring & Observability
# -----------------------------------------------------------------------------
# Application Performance Monitoring
SENTRY_DSN=
SENTRY_ENVIRONMENT=development

# Metrics
METRICS_ENABLED=false
METRICS_PORT=9090

# -----------------------------------------------------------------------------
# Third-Party Services
# -----------------------------------------------------------------------------
# Payment gateway
PAYMENT_GATEWAY_API_KEY=
PAYMENT_GATEWAY_SECRET=

# Analytics
ANALYTICS_API_KEY=

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------
FEATURE_NEW_UI=false
FEATURE_BETA_ACCESS=false

# -----------------------------------------------------------------------------
# Rate Limiting
# -----------------------------------------------------------------------------
RATE_LIMIT_WINDOW=15m
RATE_LIMIT_MAX_REQUESTS=100

# -----------------------------------------------------------------------------
# Backup Configuration
# -----------------------------------------------------------------------------
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
