#!/bin/bash
set -e

# Redis Installation and Security Configuration
# This script installs Redis and configures it with basic security settings

echo "=== Redis Installation and Security Configuration ==="

# Configuration variables
REDIS_PORT="${REDIS_PORT:-6379}"
REDIS_PASSWORD="${REDIS_PASSWORD:-$(openssl rand -base64 32)}"
REDIS_BIND_ADDRESS="${REDIS_BIND_ADDRESS:-127.0.0.1}"
REDIS_MAXMEMORY="${REDIS_MAXMEMORY:-256mb}"
REDIS_MAXMEMORY_POLICY="${REDIS_MAXMEMORY_POLICY:-allkeys-lru}"

# Check if running as root
if [ "$EUID" -ne 0 ]; then 
    echo "Please run as root or with sudo"
    exit 1
fi

echo "Installing Redis..."

# Update package lists
apt-get update

# Install Redis
apt-get install -y redis-server redis-tools

# Stop Redis service for configuration
systemctl stop redis-server

# Backup original configuration
REDIS_CONF="/etc/redis/redis.conf"
if [ -f "$REDIS_CONF" ]; then
    cp "$REDIS_CONF" "$REDIS_CONF.backup.$(date +%Y%m%d_%H%M%S)"
    echo "✓ Original configuration backed up"
fi

echo "Configuring Redis with security settings..."

# Create new configuration
cat > "$REDIS_CONF" << EOF
# Redis Configuration
# Generated by setup_redis.sh

# Network
bind $REDIS_BIND_ADDRESS
protected-mode yes
port $REDIS_PORT

# Security
requirepass $REDIS_PASSWORD

# General
daemonize no
supervised systemd
pidfile /var/run/redis/redis-server.pid
loglevel notice
logfile /var/log/redis/redis-server.log

# Snapshotting
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /var/lib/redis

# Replication
replica-read-only yes

# Memory Management
maxmemory $REDIS_MAXMEMORY
maxmemory-policy $REDIS_MAXMEMORY_POLICY

# Append Only File
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Lua scripting
lua-time-limit 5000

# Slow log
slowlog-log-slower-than 10000
slowlog-max-len 128

# Event notification
notify-keyspace-events ""

# Advanced config
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
stream-node-max-bytes 4096
stream-node-max-entries 100
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
dynamic-hz yes
aof-rewrite-incremental-fsync yes
rdb-save-incremental-fsync yes

# Disable dangerous commands
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG "CONFIG_$RANDOM"
rename-command SHUTDOWN "SHUTDOWN_$RANDOM"
EOF

# Set proper permissions
chown redis:redis "$REDIS_CONF"
chmod 640 "$REDIS_CONF"

# Ensure Redis directories exist with proper permissions
mkdir -p /var/lib/redis
mkdir -p /var/log/redis
mkdir -p /var/run/redis
chown -R redis:redis /var/lib/redis
chown -R redis:redis /var/log/redis
chown -R redis:redis /var/run/redis

# Configure systemd to use our configuration
REDIS_SERVICE="/lib/systemd/system/redis-server.service"
if [ -f "$REDIS_SERVICE" ]; then
    # Update service file to disable transparent huge pages (THP)
    mkdir -p /etc/systemd/system/redis-server.service.d
    cat > /etc/systemd/system/redis-server.service.d/override.conf << EOF
[Service]
# Disable Transparent Huge Pages
ExecStartPre=-/bin/sh -c "echo never > /sys/kernel/mm/transparent_hugepage/enabled"
ExecStartPre=-/bin/sh -c "echo never > /sys/kernel/mm/transparent_hugepage/defrag"

# Set limits
LimitNOFILE=65535

# Security hardening
PrivateTmp=yes
NoNewPrivileges=true
EOF
fi

# Reload systemd
systemctl daemon-reload

# Start Redis
echo "Starting Redis..."
systemctl start redis-server
systemctl enable redis-server

# Verify installation
sleep 2
if systemctl is-active --quiet redis-server; then
    echo "✓ Redis is running successfully"
    
    # Test connection with password
    redis-cli -a "$REDIS_PASSWORD" PING > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        echo "✓ Redis authentication working"
    else
        echo "⚠ Warning: Could not authenticate to Redis"
    fi
    
    # Get Redis info
    REDIS_VERSION=$(redis-cli -a "$REDIS_PASSWORD" INFO server 2>/dev/null | grep redis_version | cut -d: -f2 | tr -d '\r')
    echo "Redis version: $REDIS_VERSION"
else
    echo "✗ Redis failed to start"
    journalctl -xe | grep redis | tail -20
    exit 1
fi

# Save password to secure location
PASSWORD_FILE="/etc/redis/redis-password.txt"
echo "$REDIS_PASSWORD" > "$PASSWORD_FILE"
chmod 600 "$PASSWORD_FILE"
chown root:root "$PASSWORD_FILE"

# Display configuration summary
echo ""
echo "=== Redis Setup Complete ==="
echo "Redis version: $REDIS_VERSION"
echo "Bind address: $REDIS_BIND_ADDRESS"
echo "Port: $REDIS_PORT"
echo "Password: $REDIS_PASSWORD"
echo "Password saved to: $PASSWORD_FILE"
echo "Max memory: $REDIS_MAXMEMORY"
echo "Eviction policy: $REDIS_MAXMEMORY_POLICY"
echo ""
echo "Configuration file: $REDIS_CONF"
echo ""
echo "Security features enabled:"
echo "  ✓ Password authentication (requirepass)"
echo "  ✓ Protected mode enabled"
echo "  ✓ Bound to localhost only"
echo "  ✓ Dangerous commands disabled (FLUSHDB, FLUSHALL, etc.)"
echo ""
echo "To connect to Redis:"
echo "  redis-cli -a '$REDIS_PASSWORD'"
echo ""
echo "To use in application, add these environment variables:"
echo "  REDIS_HOST=$REDIS_BIND_ADDRESS"
echo "  REDIS_PORT=$REDIS_PORT"
echo "  REDIS_PASSWORD=$REDIS_PASSWORD"
